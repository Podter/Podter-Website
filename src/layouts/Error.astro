---
import Layout from "@/layouts/Layout.astro";
import { TypographyP } from "@/components/ui/typography";
import ErrorMenu from "@/components/error/ErrorMenu";
import FlyingToasters from "@/components/error/FlyingToasters.astro";

interface Props {
  title: string;
  description: string;
  code: string;
  displayDescription?: boolean;
}

const { title, description, code, displayDescription = true } = Astro.props;
---

<Layout
  title={`${code} ${title}`}
  description={description}
  displayTitle={false}
  displayDescription={false}
  transition={false}
>
  <div
    class="flex flex-col justify-center items-center content-height w-full relative overflow-hidden"
  >
    <div class="flex flex-col justify-center items-center page-transition">
      <h1 class="font-extrabold text-8xl md:text-9xl">{code}</h1>
      <h2 class="scroll-m-20 text-3xl font-bold tracking-tight">{title}</h2>
      {
        displayDescription && (
          <TypographyP className="!mt-3">{description}</TypographyP>
        )
      }
      <slot />
      <ErrorMenu client:load />
    </div>
    <FlyingToasters
      className="fixed md:absolute top-0 bottom-0 left-0 right-0 h-screen md:h-full w-full -z-20"
    />
    <div
      class="hidden md:flex absolute top-0 bottom-0 left-0 right-0 h-full w-full -z-10 shadow-flying-toasters"
    >
    </div>
  </div>
</Layout>

<style lang="scss">
  .shadow-flying-toasters {
    box-shadow: inset 0 0 50px 75px hsl(var(--background));
  }

  .content-height {
    height: calc(100vh - 15rem);
  }

  @media (min-width: 768px) {
    .content-height {
      height: calc(100vh - 17rem);
    }
  }
</style>
